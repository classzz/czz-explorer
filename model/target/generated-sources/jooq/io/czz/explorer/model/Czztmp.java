/*
 * This file is generated by jOOQ.
*/
package io.czz.explorer.model;


import io.czz.explorer.model.tables.Account;
import io.czz.explorer.model.tables.Block;
import io.czz.explorer.model.tables.BlockChain;
import io.czz.explorer.model.tables.FlywaySchemaHistory;
import io.czz.explorer.model.tables.OrphanBlock;
import io.czz.explorer.model.tables.SyncAccount;
import io.czz.explorer.model.tables.SyncBlock;
import io.czz.explorer.model.tables.SyncNode;
import io.czz.explorer.model.tables.Transaction;
import io.czz.explorer.model.tables.TransferIn;
import io.czz.explorer.model.tables.TransferOut;
import io.czz.explorer.model.tables.TransferUtxo;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Czztmp extends SchemaImpl {

    private static final long serialVersionUID = 113205710;

    /**
     * The reference instance of <code>czztmp</code>
     */
    public static final Czztmp CZZTMP = new Czztmp();

    /**
     * The table <code>czztmp.account</code>.
     */
    public final Account ACCOUNT = io.czz.explorer.model.tables.Account.ACCOUNT;

    /**
     * The table <code>czztmp.block</code>.
     */
    public final Block BLOCK = io.czz.explorer.model.tables.Block.BLOCK;

    /**
     * The table <code>czztmp.block_chain</code>.
     */
    public final BlockChain BLOCK_CHAIN = io.czz.explorer.model.tables.BlockChain.BLOCK_CHAIN;

    /**
     * The table <code>czztmp.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = io.czz.explorer.model.tables.FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>czztmp.orphan_block</code>.
     */
    public final OrphanBlock ORPHAN_BLOCK = io.czz.explorer.model.tables.OrphanBlock.ORPHAN_BLOCK;

    /**
     * The table <code>czztmp.sync_account</code>.
     */
    public final SyncAccount SYNC_ACCOUNT = io.czz.explorer.model.tables.SyncAccount.SYNC_ACCOUNT;

    /**
     * The table <code>czztmp.sync_block</code>.
     */
    public final SyncBlock SYNC_BLOCK = io.czz.explorer.model.tables.SyncBlock.SYNC_BLOCK;

    /**
     * The table <code>czztmp.sync_node</code>.
     */
    public final SyncNode SYNC_NODE = io.czz.explorer.model.tables.SyncNode.SYNC_NODE;

    /**
     * The table <code>czztmp.transaction</code>.
     */
    public final Transaction TRANSACTION = io.czz.explorer.model.tables.Transaction.TRANSACTION;

    /**
     * The table <code>czztmp.transfer_in</code>.
     */
    public final TransferIn TRANSFER_IN = io.czz.explorer.model.tables.TransferIn.TRANSFER_IN;

    /**
     * The table <code>czztmp.transfer_out</code>.
     */
    public final TransferOut TRANSFER_OUT = io.czz.explorer.model.tables.TransferOut.TRANSFER_OUT;

    /**
     * The table <code>czztmp.transfer_utxo</code>.
     */
    public final TransferUtxo TRANSFER_UTXO = io.czz.explorer.model.tables.TransferUtxo.TRANSFER_UTXO;

    /**
     * No further instances allowed
     */
    private Czztmp() {
        super("czztmp", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Account.ACCOUNT,
            Block.BLOCK,
            BlockChain.BLOCK_CHAIN,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            OrphanBlock.ORPHAN_BLOCK,
            SyncAccount.SYNC_ACCOUNT,
            SyncBlock.SYNC_BLOCK,
            SyncNode.SYNC_NODE,
            Transaction.TRANSACTION,
            TransferIn.TRANSFER_IN,
            TransferOut.TRANSFER_OUT,
            TransferUtxo.TRANSFER_UTXO);
    }
}
