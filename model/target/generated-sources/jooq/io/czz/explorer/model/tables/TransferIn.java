/*
 * This file is generated by jOOQ.
*/
package io.czz.explorer.model.tables;


import io.czz.explorer.model.Czztmp;
import io.czz.explorer.model.Keys;
import io.czz.explorer.model.tables.records.TransferInRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransferIn extends TableImpl<TransferInRecord> {

    private static final long serialVersionUID = 295143593;

    /**
     * The reference instance of <code>czztmp.transfer_in</code>
     */
    public static final TransferIn TRANSFER_IN = new TransferIn();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TransferInRecord> getRecordType() {
        return TransferInRecord.class;
    }

    /**
     * The column <code>czztmp.transfer_in.id</code>.
     */
    public final TableField<TransferInRecord, ULong> ID = createField("id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>czztmp.transfer_in.amount</code>.
     */
    public final TableField<TransferInRecord, Double> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DOUBLE.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.DOUBLE)), this, "");

    /**
     * The column <code>czztmp.transfer_in.transaction_id</code>.
     */
    public final TableField<TransferInRecord, ULong> TRANSACTION_ID = createField("transaction_id", org.jooq.impl.SQLDataType.BIGINTUNSIGNED, this, "");

    /**
     * The column <code>czztmp.transfer_in.transaction_hash</code>.
     */
    public final TableField<TransferInRecord, String> TRANSACTION_HASH = createField("transaction_hash", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>czztmp.transfer_in.address</code>.
     */
    public final TableField<TransferInRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

    /**
     * The column <code>czztmp.transfer_in.sequence</code>.
     */
    public final TableField<TransferInRecord, Long> SEQUENCE = createField("sequence", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>czztmp.transfer_in.asm</code>.
     */
    public final TableField<TransferInRecord, String> ASM = createField("asm", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

    /**
     * The column <code>czztmp.transfer_in.hex</code>.
     */
    public final TableField<TransferInRecord, String> HEX = createField("hex", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

    /**
     * The column <code>czztmp.transfer_in.coin_base</code>.
     */
    public final TableField<TransferInRecord, String> COIN_BASE = createField("coin_base", org.jooq.impl.SQLDataType.VARCHAR.length(1000), this, "");

    /**
     * The column <code>czztmp.transfer_in.vout</code>.
     */
    public final TableField<TransferInRecord, Integer> VOUT = createField("vout", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>czztmp.transfer_in</code> table reference
     */
    public TransferIn() {
        this("transfer_in", null);
    }

    /**
     * Create an aliased <code>czztmp.transfer_in</code> table reference
     */
    public TransferIn(String alias) {
        this(alias, TRANSFER_IN);
    }

    private TransferIn(String alias, Table<TransferInRecord> aliased) {
        this(alias, aliased, null);
    }

    private TransferIn(String alias, Table<TransferInRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Czztmp.CZZTMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TransferInRecord, ULong> getIdentity() {
        return Keys.IDENTITY_TRANSFER_IN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TransferInRecord> getPrimaryKey() {
        return Keys.KEY_TRANSFER_IN_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TransferInRecord>> getKeys() {
        return Arrays.<UniqueKey<TransferInRecord>>asList(Keys.KEY_TRANSFER_IN_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferIn as(String alias) {
        return new TransferIn(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TransferIn rename(String name) {
        return new TransferIn(name, null);
    }
}
