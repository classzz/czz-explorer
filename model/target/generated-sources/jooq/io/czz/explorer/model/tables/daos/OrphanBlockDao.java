/*
 * This file is generated by jOOQ.
*/
package io.czz.explorer.model.tables.daos;


import io.czz.explorer.model.tables.OrphanBlock;
import io.czz.explorer.model.tables.records.OrphanBlockRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrphanBlockDao extends DAOImpl<OrphanBlockRecord, io.czz.explorer.model.tables.pojos.OrphanBlock, ULong> {

    /**
     * Create a new OrphanBlockDao without any configuration
     */
    public OrphanBlockDao() {
        super(OrphanBlock.ORPHAN_BLOCK, io.czz.explorer.model.tables.pojos.OrphanBlock.class);
    }

    /**
     * Create a new OrphanBlockDao with an attached configuration
     */
    public OrphanBlockDao(Configuration configuration) {
        super(OrphanBlock.ORPHAN_BLOCK, io.czz.explorer.model.tables.pojos.OrphanBlock.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected ULong getId(io.czz.explorer.model.tables.pojos.OrphanBlock object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchById(ULong... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public io.czz.explorer.model.tables.pojos.OrphanBlock fetchOneById(ULong value) {
        return fetchOne(OrphanBlock.ORPHAN_BLOCK.ID, value);
    }

    /**
     * Fetch records that have <code>created_time IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByCreatedTime(Timestamp... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.CREATED_TIME, values);
    }

    /**
     * Fetch records that have <code>height IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByHeight(ULong... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.HEIGHT, values);
    }

    /**
     * Fetch a unique record that has <code>height = value</code>
     */
    public io.czz.explorer.model.tables.pojos.OrphanBlock fetchOneByHeight(ULong value) {
        return fetchOne(OrphanBlock.ORPHAN_BLOCK.HEIGHT, value);
    }

    /**
     * Fetch records that have <code>hash IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByHash(String... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.HASH, values);
    }

    /**
     * Fetch records that have <code>merkle_root IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByMerkleRoot(String... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.MERKLE_ROOT, values);
    }

    /**
     * Fetch records that have <code>miner_address IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByMinerAddress(String... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.MINER_ADDRESS, values);
    }

    /**
     * Fetch records that have <code>tx_count IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByTxCount(Integer... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.TX_COUNT, values);
    }

    /**
     * Fetch records that have <code>difficulty IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByDifficulty(Double... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.DIFFICULTY, values);
    }

    /**
     * Fetch records that have <code>transaction_fees IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByTransactionFees(Double... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.TRANSACTION_FEES, values);
    }

    /**
     * Fetch records that have <code>size IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchBySize(Long... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.SIZE, values);
    }

    /**
     * Fetch records that have <code>nonce IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByNonce(ULong... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.NONCE, values);
    }

    /**
     * Fetch records that have <code>bits IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByBits(ULong... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.BITS, values);
    }

    /**
     * Fetch records that have <code>confirmations IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByConfirmations(Integer... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.CONFIRMATIONS, values);
    }

    /**
     * Fetch records that have <code>reward IN (values)</code>
     */
    public List<io.czz.explorer.model.tables.pojos.OrphanBlock> fetchByReward(Double... values) {
        return fetch(OrphanBlock.ORPHAN_BLOCK.REWARD, values);
    }
}
