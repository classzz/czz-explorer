/*
 * This file is generated by jOOQ.
*/
package io.czz.explorer.model.tables.records;


import io.czz.explorer.model.tables.OrphanBlock;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrphanBlockRecord extends UpdatableRecordImpl<OrphanBlockRecord> implements Record14<ULong, Timestamp, ULong, String, String, String, Integer, Double, Double, Long, ULong, ULong, Integer, Double> {

    private static final long serialVersionUID = 1698093039;

    /**
     * Setter for <code>czztmp.orphan_block.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>czztmp.orphan_block.created_time</code>.
     */
    public void setCreatedTime(Timestamp value) {
        set(1, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.created_time</code>.
     */
    public Timestamp getCreatedTime() {
        return (Timestamp) get(1);
    }

    /**
     * Setter for <code>czztmp.orphan_block.height</code>.
     */
    public void setHeight(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.height</code>.
     */
    public ULong getHeight() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>czztmp.orphan_block.hash</code>.
     */
    public void setHash(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.hash</code>.
     */
    public String getHash() {
        return (String) get(3);
    }

    /**
     * Setter for <code>czztmp.orphan_block.merkle_root</code>.
     */
    public void setMerkleRoot(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.merkle_root</code>.
     */
    public String getMerkleRoot() {
        return (String) get(4);
    }

    /**
     * Setter for <code>czztmp.orphan_block.miner_address</code>.
     */
    public void setMinerAddress(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.miner_address</code>.
     */
    public String getMinerAddress() {
        return (String) get(5);
    }

    /**
     * Setter for <code>czztmp.orphan_block.tx_count</code>.
     */
    public void setTxCount(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.tx_count</code>.
     */
    public Integer getTxCount() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>czztmp.orphan_block.difficulty</code>.
     */
    public void setDifficulty(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.difficulty</code>.
     */
    public Double getDifficulty() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>czztmp.orphan_block.transaction_fees</code>.
     */
    public void setTransactionFees(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.transaction_fees</code>.
     */
    public Double getTransactionFees() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>czztmp.orphan_block.size</code>.
     */
    public void setSize(Long value) {
        set(9, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.size</code>.
     */
    public Long getSize() {
        return (Long) get(9);
    }

    /**
     * Setter for <code>czztmp.orphan_block.nonce</code>.
     */
    public void setNonce(ULong value) {
        set(10, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.nonce</code>.
     */
    public ULong getNonce() {
        return (ULong) get(10);
    }

    /**
     * Setter for <code>czztmp.orphan_block.bits</code>.
     */
    public void setBits(ULong value) {
        set(11, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.bits</code>.
     */
    public ULong getBits() {
        return (ULong) get(11);
    }

    /**
     * Setter for <code>czztmp.orphan_block.confirmations</code>.
     */
    public void setConfirmations(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.confirmations</code>.
     */
    public Integer getConfirmations() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>czztmp.orphan_block.reward</code>.
     */
    public void setReward(Double value) {
        set(13, value);
    }

    /**
     * Getter for <code>czztmp.orphan_block.reward</code>.
     */
    public Double getReward() {
        return (Double) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<ULong, Timestamp, ULong, String, String, String, Integer, Double, Double, Long, ULong, ULong, Integer, Double> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<ULong, Timestamp, ULong, String, String, String, Integer, Double, Double, Long, ULong, ULong, Integer, Double> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return OrphanBlock.ORPHAN_BLOCK.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field2() {
        return OrphanBlock.ORPHAN_BLOCK.CREATED_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field3() {
        return OrphanBlock.ORPHAN_BLOCK.HEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return OrphanBlock.ORPHAN_BLOCK.HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return OrphanBlock.ORPHAN_BLOCK.MERKLE_ROOT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return OrphanBlock.ORPHAN_BLOCK.MINER_ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return OrphanBlock.ORPHAN_BLOCK.TX_COUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return OrphanBlock.ORPHAN_BLOCK.DIFFICULTY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return OrphanBlock.ORPHAN_BLOCK.TRANSACTION_FEES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field10() {
        return OrphanBlock.ORPHAN_BLOCK.SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field11() {
        return OrphanBlock.ORPHAN_BLOCK.NONCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field12() {
        return OrphanBlock.ORPHAN_BLOCK.BITS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return OrphanBlock.ORPHAN_BLOCK.CONFIRMATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field14() {
        return OrphanBlock.ORPHAN_BLOCK.REWARD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value2() {
        return getCreatedTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value3() {
        return getHeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getMerkleRoot();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getMinerAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getTxCount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getDifficulty();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getTransactionFees();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value10() {
        return getSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value11() {
        return getNonce();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value12() {
        return getBits();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getConfirmations();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value14() {
        return getReward();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value2(Timestamp value) {
        setCreatedTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value3(ULong value) {
        setHeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value4(String value) {
        setHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value5(String value) {
        setMerkleRoot(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value6(String value) {
        setMinerAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value7(Integer value) {
        setTxCount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value8(Double value) {
        setDifficulty(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value9(Double value) {
        setTransactionFees(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value10(Long value) {
        setSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value11(ULong value) {
        setNonce(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value12(ULong value) {
        setBits(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value13(Integer value) {
        setConfirmations(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord value14(Double value) {
        setReward(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrphanBlockRecord values(ULong value1, Timestamp value2, ULong value3, String value4, String value5, String value6, Integer value7, Double value8, Double value9, Long value10, ULong value11, ULong value12, Integer value13, Double value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrphanBlockRecord
     */
    public OrphanBlockRecord() {
        super(OrphanBlock.ORPHAN_BLOCK);
    }

    /**
     * Create a detached, initialised OrphanBlockRecord
     */
    public OrphanBlockRecord(ULong id, Timestamp createdTime, ULong height, String hash, String merkleRoot, String minerAddress, Integer txCount, Double difficulty, Double transactionFees, Long size, ULong nonce, ULong bits, Integer confirmations, Double reward) {
        super(OrphanBlock.ORPHAN_BLOCK);

        set(0, id);
        set(1, createdTime);
        set(2, height);
        set(3, hash);
        set(4, merkleRoot);
        set(5, minerAddress);
        set(6, txCount);
        set(7, difficulty);
        set(8, transactionFees);
        set(9, size);
        set(10, nonce);
        set(11, bits);
        set(12, confirmations);
        set(13, reward);
    }
}
