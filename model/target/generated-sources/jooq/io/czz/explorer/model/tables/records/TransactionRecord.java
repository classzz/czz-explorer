/*
 * This file is generated by jOOQ.
*/
package io.czz.explorer.model.tables.records;


import io.czz.explorer.model.tables.Transaction;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record14<ULong, String, String, Timestamp, Timestamp, Long, Long, Double, Double, Double, Integer, Integer, Integer, String> {

    private static final long serialVersionUID = -1685027827;

    /**
     * Setter for <code>czztmp.transaction.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>czztmp.transaction.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>czztmp.transaction.hash</code>.
     */
    public void setHash(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>czztmp.transaction.hash</code>.
     */
    public String getHash() {
        return (String) get(1);
    }

    /**
     * Setter for <code>czztmp.transaction.block_hash</code>.
     */
    public void setBlockHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>czztmp.transaction.block_hash</code>.
     */
    public String getBlockHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>czztmp.transaction.block_time</code>.
     */
    public void setBlockTime(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>czztmp.transaction.block_time</code>.
     */
    public Timestamp getBlockTime() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>czztmp.transaction.created_time</code>.
     */
    public void setCreatedTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>czztmp.transaction.created_time</code>.
     */
    public Timestamp getCreatedTime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>czztmp.transaction.size</code>.
     */
    public void setSize(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>czztmp.transaction.size</code>.
     */
    public Long getSize() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>czztmp.transaction.weight</code>.
     */
    public void setWeight(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>czztmp.transaction.weight</code>.
     */
    public Long getWeight() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>czztmp.transaction.fees</code>.
     */
    public void setFees(Double value) {
        set(7, value);
    }

    /**
     * Getter for <code>czztmp.transaction.fees</code>.
     */
    public Double getFees() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>czztmp.transaction.total_input</code>.
     */
    public void setTotalInput(Double value) {
        set(8, value);
    }

    /**
     * Getter for <code>czztmp.transaction.total_input</code>.
     */
    public Double getTotalInput() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>czztmp.transaction.total_output</code>.
     */
    public void setTotalOutput(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>czztmp.transaction.total_output</code>.
     */
    public Double getTotalOutput() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>czztmp.transaction.type</code>.
     */
    public void setType(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>czztmp.transaction.type</code>.
     */
    public Integer getType() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>czztmp.transaction.confirmations</code>.
     */
    public void setConfirmations(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>czztmp.transaction.confirmations</code>.
     */
    public Integer getConfirmations() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>czztmp.transaction.version</code>.
     */
    public void setVersion(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>czztmp.transaction.version</code>.
     */
    public Integer getVersion() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>czztmp.transaction.hex</code>.
     */
    public void setHex(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>czztmp.transaction.hex</code>.
     */
    public String getHex() {
        return (String) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<ULong, String, String, Timestamp, Timestamp, Long, Long, Double, Double, Double, Integer, Integer, Integer, String> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row14<ULong, String, String, Timestamp, Timestamp, Long, Long, Double, Double, Double, Integer, Integer, Integer, String> valuesRow() {
        return (Row14) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return Transaction.TRANSACTION.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Transaction.TRANSACTION.HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Transaction.TRANSACTION.BLOCK_HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Transaction.TRANSACTION.BLOCK_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return Transaction.TRANSACTION.CREATED_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return Transaction.TRANSACTION.SIZE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return Transaction.TRANSACTION.WEIGHT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return Transaction.TRANSACTION.FEES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return Transaction.TRANSACTION.TOTAL_INPUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field10() {
        return Transaction.TRANSACTION.TOTAL_OUTPUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field11() {
        return Transaction.TRANSACTION.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field12() {
        return Transaction.TRANSACTION.CONFIRMATIONS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field13() {
        return Transaction.TRANSACTION.VERSION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field14() {
        return Transaction.TRANSACTION.HEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getBlockHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getBlockTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreatedTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getSize();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getWeight();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getFees();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getTotalInput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value10() {
        return getTotalOutput();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value11() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value12() {
        return getConfirmations();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value13() {
        return getVersion();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value14() {
        return getHex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value2(String value) {
        setHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value3(String value) {
        setBlockHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value4(Timestamp value) {
        setBlockTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value5(Timestamp value) {
        setCreatedTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value6(Long value) {
        setSize(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value7(Long value) {
        setWeight(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value8(Double value) {
        setFees(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value9(Double value) {
        setTotalInput(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value10(Double value) {
        setTotalOutput(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value11(Integer value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value12(Integer value) {
        setConfirmations(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value13(Integer value) {
        setVersion(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord value14(String value) {
        setHex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransactionRecord values(ULong value1, String value2, String value3, Timestamp value4, Timestamp value5, Long value6, Long value7, Double value8, Double value9, Double value10, Integer value11, Integer value12, Integer value13, String value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(ULong id, String hash, String blockHash, Timestamp blockTime, Timestamp createdTime, Long size, Long weight, Double fees, Double totalInput, Double totalOutput, Integer type, Integer confirmations, Integer version, String hex) {
        super(Transaction.TRANSACTION);

        set(0, id);
        set(1, hash);
        set(2, blockHash);
        set(3, blockTime);
        set(4, createdTime);
        set(5, size);
        set(6, weight);
        set(7, fees);
        set(8, totalInput);
        set(9, totalOutput);
        set(10, type);
        set(11, confirmations);
        set(12, version);
        set(13, hex);
    }
}
