/*
 * This file is generated by jOOQ.
*/
package io.czz.explorer.model.tables.records;


import io.czz.explorer.model.tables.TransferIn;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransferInRecord extends UpdatableRecordImpl<TransferInRecord> implements Record10<ULong, Double, ULong, String, String, Long, String, String, String, Integer> {

    private static final long serialVersionUID = 873205702;

    /**
     * Setter for <code>czztmp.transfer_in.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>czztmp.transfer_in.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>czztmp.transfer_in.amount</code>.
     */
    public void setAmount(Double value) {
        set(1, value);
    }

    /**
     * Getter for <code>czztmp.transfer_in.amount</code>.
     */
    public Double getAmount() {
        return (Double) get(1);
    }

    /**
     * Setter for <code>czztmp.transfer_in.transaction_id</code>.
     */
    public void setTransactionId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>czztmp.transfer_in.transaction_id</code>.
     */
    public ULong getTransactionId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>czztmp.transfer_in.transaction_hash</code>.
     */
    public void setTransactionHash(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>czztmp.transfer_in.transaction_hash</code>.
     */
    public String getTransactionHash() {
        return (String) get(3);
    }

    /**
     * Setter for <code>czztmp.transfer_in.address</code>.
     */
    public void setAddress(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>czztmp.transfer_in.address</code>.
     */
    public String getAddress() {
        return (String) get(4);
    }

    /**
     * Setter for <code>czztmp.transfer_in.sequence</code>.
     */
    public void setSequence(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>czztmp.transfer_in.sequence</code>.
     */
    public Long getSequence() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>czztmp.transfer_in.asm</code>.
     */
    public void setAsm(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>czztmp.transfer_in.asm</code>.
     */
    public String getAsm() {
        return (String) get(6);
    }

    /**
     * Setter for <code>czztmp.transfer_in.hex</code>.
     */
    public void setHex(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>czztmp.transfer_in.hex</code>.
     */
    public String getHex() {
        return (String) get(7);
    }

    /**
     * Setter for <code>czztmp.transfer_in.coin_base</code>.
     */
    public void setCoinBase(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>czztmp.transfer_in.coin_base</code>.
     */
    public String getCoinBase() {
        return (String) get(8);
    }

    /**
     * Setter for <code>czztmp.transfer_in.vout</code>.
     */
    public void setVout(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>czztmp.transfer_in.vout</code>.
     */
    public Integer getVout() {
        return (Integer) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<ULong, Double, ULong, String, String, Long, String, String, String, Integer> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<ULong, Double, ULong, String, String, Long, String, String, String, Integer> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field1() {
        return TransferIn.TRANSFER_IN.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field2() {
        return TransferIn.TRANSFER_IN.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ULong> field3() {
        return TransferIn.TRANSFER_IN.TRANSACTION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TransferIn.TRANSFER_IN.TRANSACTION_HASH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return TransferIn.TRANSFER_IN.ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field6() {
        return TransferIn.TRANSFER_IN.SEQUENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return TransferIn.TRANSFER_IN.ASM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return TransferIn.TRANSFER_IN.HEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return TransferIn.TRANSFER_IN.COIN_BASE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field10() {
        return TransferIn.TRANSFER_IN.VOUT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value2() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ULong value3() {
        return getTransactionId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getTransactionHash();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getAddress();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value6() {
        return getSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getAsm();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getHex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getCoinBase();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value10() {
        return getVout();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord value1(ULong value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord value2(Double value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord value3(ULong value) {
        setTransactionId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord value4(String value) {
        setTransactionHash(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord value5(String value) {
        setAddress(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord value6(Long value) {
        setSequence(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord value7(String value) {
        setAsm(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord value8(String value) {
        setHex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord value9(String value) {
        setCoinBase(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord value10(Integer value) {
        setVout(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TransferInRecord values(ULong value1, Double value2, ULong value3, String value4, String value5, Long value6, String value7, String value8, String value9, Integer value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransferInRecord
     */
    public TransferInRecord() {
        super(TransferIn.TRANSFER_IN);
    }

    /**
     * Create a detached, initialised TransferInRecord
     */
    public TransferInRecord(ULong id, Double amount, ULong transactionId, String transactionHash, String address, Long sequence, String asm, String hex, String coinBase, Integer vout) {
        super(TransferIn.TRANSFER_IN);

        set(0, id);
        set(1, amount);
        set(2, transactionId);
        set(3, transactionHash);
        set(4, address);
        set(5, sequence);
        set(6, asm);
        set(7, hex);
        set(8, coinBase);
        set(9, vout);
    }
}
